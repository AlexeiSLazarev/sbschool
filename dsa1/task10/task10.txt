Реализуйте следующие типичные для множества методы:

- remove(значение) -- удаление элемента из множества;

- intersection(), в качестве параметра выступает другое множество, а возвращается пересечение этих множеств (множество,
 в котором есть только те элементы, которые имеются в каждом из множеств);

- union(), в качестве параметра выступает другое множество, а возвращается объединение этих множеств (множество,
в котором есть все элементы из каждого множества);

- difference(), в качестве параметра выступает другое множество, а возвращается подмножество текущего множества
из таких элементов, которые не входят в множество-параметр;

- issubset(), в качестве параметра выступает другое множество, и проверяется, входят ли все его элементы в текущее
множество (будет ли множество-параметр подмножеством текущего множества).

3. Добавьте тесты, которые проверяют:
- возможность добавления отсутствующего элемента и невозможность добавления присутствующего в множестве элемента
с помощью put();
- удаление элемента с помощью remove();
- пересечение множеств intersection(), чтобы в результате получались как пустое, так и непустое множества;
- объединение union(), когда оба параметра непустые, и когда один из параметров -- пустое множество;
- разница difference(), чтобы в результате получались как пустое, так и непустое множества;
- подмножество issubset() -- рассмотрите три случая (все элементы параметра входят в текущее множество,
все элементы текущего множества входят в параметр, не все элементы параметра входят в текущее множество);
-- быстродействие (операции над множествами из десятков тысяч элементов укладываются в пару секунд).